services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: coffee_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: coffee_admin
      MYSQL_USER: coffee_user
      MYSQL_PASSWORD: coffee_password
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - coffee_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # NestJS Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: coffee_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: coffee_user
      DB_PASSWORD: coffee_password
      DB_DATABASE: coffee_admin
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - coffee_network
    command: npm run start:dev

  # Angular/Ionic Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: coffee_frontend
    restart: unless-stopped
    ports:
      - "4000:80"          # Nginx слушает порт 80, наружу отдаём 4000
    networks:
      - coffee_network
    depends_on:
      - backend


volumes:
  mysql_data:

networks:
  coffee_network:
    driver: bridge
