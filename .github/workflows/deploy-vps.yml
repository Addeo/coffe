name: Deploy to VPS (Cloud.ru)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: 🔍 Debug - Check project structure
        run: |
          echo "=== Project structure ==="
          find . -name "nginx.conf" -type f
          echo "=== Frontend directory ==="
          ls -la frontend/
          echo "=== nginx.conf content ==="
          cat frontend/nginx.conf

      - name: 🛠️ Update Dockerfile with fixed nginx config
        run: |
          cat > frontend/Dockerfile << 'DOCKERFILE'
          # Stage 1: Build the application
          FROM node:20-alpine AS build
          WORKDIR /app
          
          COPY package*.json ./
          RUN npm install --legacy-peer-deps
          COPY . .
          RUN npm run build
          
          # Stage 2: Serve with Nginx
          FROM nginx:alpine
          
          COPY --from=build /app/dist/coffee-admin /usr/share/nginx/html
          
          # Create nginx config directly
          RUN cat > /etc/nginx/conf.d/default.conf << 'NGINXEOF'
          server {
              listen 80;
              server_name localhost;
              root /usr/share/nginx/html;
              index index.html;
          
              # Angular SPA routing
              location / {
                  try_files \$uri \$uri/ /index.html =404;
              }
          
              # Cache static assets
              location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                  expires 1y;
                  add_header Cache-Control "public, immutable";
                  try_files \$uri =404;
              }
          
              # Disable caching for index.html
              location = /index.html {
                  add_header Cache-Control "no-cache, no-store, must-revalidate";
                  expires 0;
              }
          
              error_page 500 502 503 504 /50x.html;
              location = /50x.html {
                  root /usr/share/nginx/html;
              }
          }
          NGINXEOF
          
          EXPOSE 80
          CMD ["nginx", "-g", "daemon off;"]
          DOCKERFILE

      - name: 📦 Copy files to VPS
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude 'backend/dist' \
            --exclude 'backend/database.sqlite' \
            --exclude 'backend/uploads' \
            --exclude 'frontend/dist' \
            --exclude 'frontend/node_modules' \
            ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/${{ secrets.VPS_USER }}/coffe/

      - name: 📝 Create .env file on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd ~/coffe && cat > .env << 'ENVEOF'
          NODE_ENV=production
          PORT=3001
          
          DB_HOST=mysql
          DB_PORT=3306
          DB_USERNAME=${{ secrets.MYSQL_USER }}
          DB_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          DB_DATABASE=${{ secrets.MYSQL_DATABASE }}
          DB_SSL=false
          
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          
          SMTP_HOST=${{ secrets.SMTP_HOST }}
          SMTP_PORT=${{ secrets.SMTP_PORT }}
          SMTP_USER=${{ secrets.SMTP_USER }}
          SMTP_PASS=${{ secrets.SMTP_PASS }}
          
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER=${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          ENVEOF"

      - name: 🐳 Deploy with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd ~/coffe && 
            echo '=== Stopping all containers ===' && 
            docker-compose -f docker-compose.prod.yml down --remove-orphans -v || true &&
            echo '=== Force removing coffee containers ===' &&
            docker rm -f \$(docker ps -aq --filter 'name=coffee_') 2>/dev/null || true &&
            echo '=== Removing MySQL volume to reinitialize DB ===' &&
            docker volume rm coffe_mysql_data 2>/dev/null || true &&
            echo '=== Cleaning up system ===' && 
            docker system prune -af --volumes &&
            echo '=== Building images ===' && 
            docker-compose -f docker-compose.prod.yml build --no-cache --pull &&
            echo '=== Starting services ===' && 
            docker-compose -f docker-compose.prod.yml up -d &&
            echo '=== Waiting for containers to start ===' &&
            sleep 15 &&
            echo '=== Status check ===' &&
            docker-compose -f docker-compose.prod.yml ps"

      - name: ✅ Deployment complete
        run: |
          echo "🎉 Deployment successful!"
          echo "Backend: http://${{ secrets.VPS_HOST }}:3001"
          echo "Frontend: http://${{ secrets.VPS_HOST }}:4000"