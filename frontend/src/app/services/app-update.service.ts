import { Injectable, inject } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Capacitor } from '@capacitor/core';
import { App } from '@capacitor/app';
import { environment } from '../../environments/environment';

interface VersionResponse {
  version: string;
  downloadUrl: string;
  required: boolean;
  releaseNotes?: string;
}

@Injectable({
  providedIn: 'root',
})
export class AppUpdateService {
  private http = inject(HttpClient);
  private currentVersion: string = environment.appVersion;
  private readonly LAST_CHECK_KEY = 'app_update_last_check';
  private readonly CHECK_INTERVAL = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞

  constructor() {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    this.initCurrentVersion();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  private async initCurrentVersion(): Promise<void> {
    if (Capacitor.isNativePlatform()) {
      try {
        const info = await App.getInfo();
        this.currentVersion = info.version;
        console.log('üì± –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (native):', this.currentVersion);
      } catch (error) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        this.currentVersion = environment.appVersion;
      }
    } else {
      console.log('üì± –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (web):', this.currentVersion);
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   * @returns Promise —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ä—Å–∏–∏
   */
  async checkForUpdates(): Promise<VersionResponse | null> {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º (Android/iOS)
      if (!Capacitor.isNativePlatform()) {
        console.log('üåê –í–µ–±-–≤–µ—Ä—Å–∏—è: –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç–∫–ª—é—á–µ–Ω–∞');
        return null;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–ª–∏ –ª–∏ –º—ã –Ω–µ–¥–∞–≤–Ω–æ
      const lastCheck = this.getLastCheckTime();
      const now = Date.now();
      
      if (lastCheck && (now - lastCheck) < this.CHECK_INTERVAL) {
        const hoursSinceCheck = Math.floor((now - lastCheck) / (60 * 60 * 1000));
        console.log(`‚è∞ –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±—ã–ª–∞ ${hoursSinceCheck} —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.`);
        return null;
      }

      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è:', this.currentVersion);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      const response = await this.http
        .get<VersionResponse>(`${environment.apiUrl}/app/version`)
        .toPromise();

      console.log('üì° –í–µ—Ä—Å–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', response?.version);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏
      this.saveLastCheckTime();

      if (response && response.version !== this.currentVersion) {
        console.log('‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:', response.version);
        return response;
      }

      console.log('‚ÑπÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è');
      return null;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:', error);
      return null;
    }
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  private saveLastCheckTime(): void {
    try {
      localStorage.setItem(this.LAST_CHECK_KEY, Date.now().toString());
    } catch (error) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  private getLastCheckTime(): number | null {
    try {
      const lastCheck = localStorage.getItem(this.LAST_CHECK_KEY);
      return lastCheck ? parseInt(lastCheck, 10) : null;
    } catch (error) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏:', error);
      return null;
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è Android
   */
  async downloadAndInstall(url: string): Promise<void> {
    try {
      console.log('üì• –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å:', url);

      if (Capacitor.isNativePlatform()) {
        // –î–ª—è –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º window.open —Å '_system'
        // Android –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å APK
        const link = document.createElement('a');
        link.href = url;
        link.target = '_system';
        link.click();
        
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ');
      } else {
        // –î–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
        window.open(url, '_blank');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
      // Fallback: –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å URL –Ω–∞–ø—Ä—è–º—É—é
      window.open(url, Capacitor.isNativePlatform() ? '_system' : '_blank');
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  getCurrentVersion(): string {
    return this.currentVersion;
  }
}

