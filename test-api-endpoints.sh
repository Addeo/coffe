#!/bin/bash

# =============================================================================
# –ü–†–û–°–¢–´–ï –¢–ï–°–¢–´ API –≠–ù–î–ü–û–ò–ù–¢–û–í
# =============================================================================

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL="http://localhost:3000"

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date '+%H:%M:%S')]${NC} $1"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
    ((PASSED_TESTS++))
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
    ((FAILED_TESTS++))
}

log_info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞
test_endpoint() {
    local method=$1
    local endpoint=$2
    local expected_status=$3
    local description=$4
    
    ((TOTAL_TESTS++))
    
    local response=$(curl -s -w "%{http_code}" -o /dev/null -X $method "$BASE_URL$endpoint")
    
    if [ "$response" = "$expected_status" ]; then
        log_success "$method $endpoint -> $response ($description)"
        return 0
    else
        log_error "$method $endpoint -> Expected: $expected_status, Got: $response ($description)"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
check_server() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
    
    local response=$(curl -s -w "%{http_code}" -o /dev/null "$BASE_URL/test/health")
    
    if [ "$response" = "200" ]; then
        log_success "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 0
    else
        log_error "–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $response)"
        return 1
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
test_public_endpoints() {
    log_info "=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–£–ë–õ–ò–ß–ù–´–• –≠–ù–î–ü–û–ò–ù–¢–û–í ==="
    
    test_endpoint "GET" "/test/health" "200" "Health check"
    test_endpoint "GET" "/test" "200" "Test endpoint"
    test_endpoint "GET" "/test/simple" "200" "Simple test"
    test_endpoint "GET" "/test/organizations" "200" "Organizations test"
    test_endpoint "GET" "/test/organizations-static" "200" "Static organizations"
    test_endpoint "GET" "/test/organizations-fixed" "200" "Fixed organizations"
    test_endpoint "GET" "/organizations/public" "200" "Public organizations"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ (–¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 401)
test_protected_endpoints() {
    log_info "=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–©–ò–©–ï–ù–ù–´–• –≠–ù–î–ü–û–ò–ù–¢–û–í (401) ==="
    
    test_endpoint "GET" "/users" "401" "Users list without auth"
    test_endpoint "GET" "/orders" "401" "Orders list without auth"
    test_endpoint "GET" "/organizations" "401" "Organizations list without auth"
    test_endpoint "GET" "/notifications" "401" "Notifications without auth"
    test_endpoint "GET" "/files" "200" "Files list (public)"
    test_endpoint "GET" "/statistics/earnings" "401" "Statistics without auth"
    test_endpoint "GET" "/calculations/salary" "401" "Calculations without auth"
    test_endpoint "GET" "/reports/engineer-salaries-chart" "401" "Reports without auth"
    test_endpoint "GET" "/backup/list" "401" "Backup without auth"
    test_endpoint "GET" "/work-sessions" "401" "Work sessions without auth"
    test_endpoint "GET" "/engineer-organization-rates" "401" "Engineer rates without auth"
    test_endpoint "GET" "/api/salary-payments" "401" "Salary payments without auth"
    test_endpoint "GET" "/products" "401" "Products without auth"
    test_endpoint "GET" "/export/orders" "401" "Export without auth"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ (–¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 404)
test_not_found_endpoints() {
    log_info "=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–ï–°–£–©–ï–°–¢–í–£–Æ–©–ò–• –≠–ù–î–ü–û–ò–ù–¢–û–í (404) ==="
    
    test_endpoint "GET" "/nonexistent" "404" "Non-existent endpoint"
    test_endpoint "GET" "/api/invalid" "404" "Invalid API endpoint"
    test_endpoint "GET" "/test/invalid" "404" "Invalid test endpoint"
    test_endpoint "POST" "/nonexistent" "404" "POST to non-existent"
    test_endpoint "PUT" "/nonexistent" "404" "PUT to non-existent"
    test_endpoint "DELETE" "/nonexistent" "404" "DELETE to non-existent"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ (GET –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å, POST/PUT/DELETE –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö - 400/401)
test_methods() {
    log_info "=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï HTTP –ú–ï–¢–û–î–û–í ==="
    
    # GET —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
    test_endpoint "GET" "/test" "200" "GET method"
    
    # POST –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 400 –∏–ª–∏ 401
    test_endpoint "POST" "/test" "404" "POST to test (404 - no route)"
    test_endpoint "POST" "/auth/login" "400" "POST login without data"
    test_endpoint "POST" "/users" "401" "POST users without auth"
    test_endpoint "POST" "/orders" "401" "POST orders without auth"
    
    # PUT –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö
    test_endpoint "PUT" "/test" "404" "PUT to test (404 - no route)"
    test_endpoint "PUT" "/users/1" "401" "PUT users without auth"
    
    # DELETE –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö
    test_endpoint "DELETE" "/test" "404" "DELETE to test (404 - no route)"
    test_endpoint "DELETE" "/users/1" "401" "DELETE users without auth"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
test_query_parameters() {
    log_info "=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–†–ê–ú–ï–¢–†–û–í –ó–ê–ü–†–û–°–ê ==="
    
    # –í–∞–ª–∏–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    test_endpoint "GET" "/test/organizations?limit=10" "200" "With valid query params"
    test_endpoint "GET" "/organizations/public?limit=5" "200" "Public orgs with params"
    
    # –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è gracefully)
    test_endpoint "GET" "/test/organizations?invalid=value" "200" "With invalid query params"
    test_endpoint "GET" "/organizations/public?page=abc" "200" "Invalid page parameter"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
print_summary() {
    echo ""
    echo "=================================================================================="
    echo -e "${PURPLE}                           –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢${NC}"
    echo "=================================================================================="
    echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${CYAN}$TOTAL_TESTS${NC}"
    echo -e "–ü—Ä–æ—à–ª–æ: ${GREEN}$PASSED_TESTS${NC}"
    echo -e "–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${RED}$FAILED_TESTS${NC}"
    
    if [ $FAILED_TESTS -eq 0 ]; then
        echo -e "\n${GREEN}üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!${NC}"
        echo -e "${CYAN}–í—Å–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
        return 0
    else
        echo -e "\n${YELLOW}‚ö†Ô∏è  –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –ù–ï–ö–û–¢–û–†–´–ú–ò –≠–ù–î–ü–û–ò–ù–¢–ê–ú–ò${NC}"
        echo -e "–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${YELLOW}$(( (PASSED_TESTS * 100) / TOTAL_TESTS ))%${NC}"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${PURPLE}=================================================================================="
    echo -e "                    –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –≠–ù–î–ü–û–ò–ù–¢–û–í"
    echo -e "==================================================================================${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    if ! check_server; then
        echo -e "${RED}‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ $BASE_URL${NC}"
        echo -e "${YELLOW}üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd backend && npm run start:dev${NC}"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
    test_public_endpoints
    test_protected_endpoints
    test_not_found_endpoints
    test_methods
    test_query_parameters
    
    # –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
    print_summary
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
